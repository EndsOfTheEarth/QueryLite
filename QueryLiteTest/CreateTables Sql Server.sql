
CREATE TABLE AllTypes (
	
	taId INT IDENTITY NOT NULL,
	taGuid UNIQUEIDENTIFIER NOT NULL,
	taString NVARCHAR(100) NOT NULL,
	taSmallInt SMALLINT NOT NULL,
	taInt INT NOT NULL,
	taBigInt BIGINT NOT NULL,
	taDecimal DECIMAL(19, 8) NOT NULL,
	taFloat REAL NOT NULL,
	taDouble FLOAT NOT NULL,
	taBoolean TINYINT NOT NULL,
	taBytes VARBINARY(MAX) NOT NULL,
	taDateTime DATETIME NOT NULL,
	taDateTimeOffset DATETIMEOFFSET NOT NULL,
	taEnum SMALLINT NOT NULL,
	taDateOnly DATE NOT NULL,
	taTimeOnly TIME NOT NULL,

	CONSTRAINT pk_TableA PRIMARY KEY(taId)
);

CREATE TABLE Parent (
	Id UNIQUEIDENTIFIER NOT NULL,
	Id2 UNIQUEIDENTIFIER NOT NULL,
	CONSTRAINT pk_Parent PRIMARY KEY(Id),
	CONSTRAINT unq_Parent UNIQUE(Id2)
);

CREATE TABLE Child (
	Id UNIQUEIDENTIFIER NOT NULL,
	ParentId UNIQUEIDENTIFIER NOT NULL,
	CONSTRAINT pk_Child PRIMARY KEY(Id),
	CONSTRAINT fk_Child_Parent FOREIGN KEY(ParentId) REFERENCES Parent(Id),
	CONSTRAINT fk_Child_Parent_Id2 FOREIGN KEY(ParentId) REFERENCES Parent(Id2)
);

CREATE TABLE GeoTest (

	gtGuid UNIQUEIDENTIFIER NOT NULL,
	gtGeography GEOGRAPHY NOT NULL,

	CONSTRAINT pk_GeoTest PRIMARY KEY(gtGuid)
);

CREATE TABLE RowVersionTest (

	Id INTEGER NOT NULL,
	TextValue CHAR(10) NOT NULL,
	RowVersion RowVersion,

	CONSTRAINT pk_RowVersionTest PRIMARY KEY(Id)
);

CREATE TABLE EnumTestTable (

	etByteEnum TINYINT NOT NULL,	
	etShortEnum SMALLINT NOT NULL,	
	etIntEnum INTEGER NOT NULL,	
	etLongEnum BIGINT NOT NULL,
	etByteNullEnum TINYINT NULL,	
	etShortNullEnum SMALLINT NULL,	
	etIntNullEnum INTEGER NULL,	
	etLongNullEnum BIGINT NULL
);